syntax = "proto3";

package indigo.igpackgen.pb;

/*************************************************\
 *         Indigo Asset Pack Plan Proto          *
 *                                               *
 * Declarative format for loading and processing *
 *  raw asset source files, and compiling them   *
 *  into asset packs that can later be used by   *
 *  the Indigo engine.                           *
\*************************************************/

message Vec3f {
  float x = 1;
  float y = 2;
  float z = 3;
}

// Rotation, expressed as an axis and angle (to build a quaternion)
message Rotation {
  float x = 1;
  float y = 2;
  float z = 3;
  
  float angle = 4;
}

message CopyWgslSourceAction {
  enum ShaderType {
    UNKNOWN = 0;
    VERTEX = 1;
    FRAGMENT = 2;
    COMPUTE = 3;
  }

  string input_file_path = 1;
  ShaderType shader_type = 2;
  string entry_point = 3;

  string igasset_name = 4;
  bool strip_comments_and_such = 5;
}

message DracoConversionParams {
  int32 compression_speed = 1;
  int32 decompression_speed = 2;
}

message AssimpToStaticDracoGeoAction {
  string input_file_path = 1;
  repeated string assimp_mesh_names = 2;
  DracoConversionParams draco_params = 3;

  string mesh_igasset_name = 4;
}

message AssimpExtractAnimationToOzz {
  string input_file_path = 1;
  string assimp_animation_name = 2;
  string animation_igasset_name = 3;
  string skeleton_igasset_name = 5;

  message OptimizationParameters {
    float default_error_measurement_distance = 2;
    float default_error_tolerance = 3;

    message JointOptimizationParameter {
      string joint_name = 1;
      float error_measurement_distance = 2;
      float error_tolerance = 3;
    }

    repeated JointOptimizationParameter joint_optimization_parameters = 4;
  }

  OptimizationParameters optimization_parameters = 4;

  // Next token: 6
}

message AssimpExtractSkeletonToOzz {
  string input_file_path = 1;
  string skeleton_igasset_name = 2;
}

message AssimpExtractSkinnedMeshToDraco {
  string input_file_path = 1;
  string assimp_mesh_name = 2;
  DracoConversionParams draco_params = 3;

  string mesh_igasset_name = 4;
}

message AssembleRecastNavMeshAction {
  // XZ cell size - param "cs" in Recast API calls
  float cell_size = 1;

  // Y cell size - param "ch" in Recast API calls
  float cell_height = 4;

  // What is the maximum slope that can be traversed by the agent?
  float max_slope_degrees = 5;

  // What is the height that the agent can climb?
  float walkable_climb = 6;

  // What is the minimum vertical height that the agent can stand?
  float walkable_height = 7;

  // What is the radius of the agent?
  float agent_radius = 8;

  // What is the minimum region size that will be included in a navmesh?
  float min_region_area = 9;

  // What is the region size below which regions will be merged?
  float merge_region_area = 10;

  // What is the maximum error a contour edge should have from the mesh border?
  float max_contour_error = 11;

  // What is the maximum allowable length of a contour edge?
  float max_edge_length = 12;

  // What is the sample distance to use in building the detail mesh?
  float detail_sample_distance = 13;

  // What is the maximum error allowed when building the detail mesh?
  float detail_max_error = 14;

  message BB {
    float min_x = 1;
    float min_y = 2;
    float min_z = 3;
    float max_x = 4;
    float max_y = 5;
    float max_z = 6;
  }

  // Bounding box override - params bim/bmax in Recast API calls
  BB bb_override = 2;

  message AssimpGeoDef {
    string assimp_file_name = 1;
    string assimp_mesh_name = 2;

    Vec3f position = 3;
    Rotation rotation = 4;
    Vec3f scale = 5;
  }

  message RecastOp {
    oneof op {
      AssimpGeoDef include_assimp_geo = 1;
      AssimpGeoDef exclude_assimp_geo = 2;
    }
  }

  // An ordered list of Recast construction operations to apply in order
  //  to build the Recast navmesh.
  repeated RecastOp recast_build_ops = 3;

  string igasset_name = 16;
  // Next ID: 15
}

message SingleAction {
  oneof request {
    CopyWgslSourceAction copy_wgsl_source = 1;
    AssimpToStaticDracoGeoAction assimp_to_static_draco_geo = 2;
    AssembleRecastNavMeshAction assemble_navmesh = 3;
    AssimpExtractAnimationToOzz extract_ozz_animation = 4;
    AssimpExtractSkeletonToOzz extract_ozz_skeleton = 5;
    AssimpExtractSkinnedMeshToDraco extract_skinned_draco_geo = 6;
  }
}

message SingleIgpackPlan {
  string asset_pack_file_path = 1;
  repeated SingleAction actions = 2;
}

message IgpackGenPlan {
  repeated SingleIgpackPlan plan = 1;
}
